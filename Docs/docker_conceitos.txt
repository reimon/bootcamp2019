26/06/2019

Imagem de aplicação

Container, instancia de uma Imagem

Docker Registry (Docker Hub), onde estão as imagens do Docker

Dockerfile
    Receita para criar uma imagem


# Partimos de uma imagem existente
FROM node:10

# Definimos a pasta e copiamos os arquivos
WORKDIR /usr/app
COPY . ./

# Instalamos as dependencias
RUN yarn

# Qual porta queremos expor?
EXPOSE 3333

# Executamos nossa aplicação
CMD yarn start



https://docs.docker.com/install/linux/docker-ce/ubuntu/ 


https://hub.docker.com/_/postgres


docker run --name some-postgres -e POSTGRES_PASSWORD=mysecretpassword -d postgres

# cria um container postgres disponivel na porta 5432 local para a porta 5432 do container
docker run --name database -e POSTGRES_PASSWORD=docker -p 5432:5432 -d postgres

# Usuário padrão: postgres

# Id do container
56d8c2aaa96ffe53eec44f517dfb8c460deea5142b00138833421f214a72dc48

# visualizando os containers
docker ps
CONTAINER ID        IMAGE               COMMAND                CREATED             STATUS              PORTS                    NAMES
a4ddbfcdf822        postgres:latest     "docker-entrypoint.s   52 seconds ago      Up 51 seconds       0.0.0.0:5432->5432/tcp   database 


# interface gráfica para postgres
https://electronjs.org/apps/postbird

criar datbase gobarber


# parar o container
docker stop database

# iniciar o container
docker start database


# visualiza todos os containers
 docker ps -a


# verifica se está tudo ok
docker logs database

####################################
# mongodb docker
docker run --name mongobarber -p 27017:27017 -d -t mongo

Digest: sha256:83cb1a2a789cef7b6fb20b397f20d3b678b81525a493ee2df23b5adefae95ea3
Status: Downloaded newer image for mongo:latest
cdc57e291eedea8ed5b949f86f7c3c2ab50838fcdc3325de933f43e14c60c1ea

####################################
# Redis docker


# Redis com itens essenciais do linux, bem leve
docker run --name redisbarber -p 6379:6379 -d -t redis:alpine

